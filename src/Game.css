/* src/components/Game.css */
@import url('https://fonts.googleapis.com/css2?family=Lilita+One&display=swap');

p {
  font-family: 'Lilita One', sans-serif;
}

body {
  margin: 0;
  font-family: 'Lilita One', sans-serif;
  background-color: #f4f6f8;
  color: #333;
}

.game-container {
  display: flex;
  flex-direction: column;
  min-height: 100vh;
}

/* 
 * Use CSS Grid for the main layout. It's robust for this kind of structure.
 * On large screens, we have 3 columns. The middle (game) gets twice the space.
*/
.game-main {
  display: grid;
  grid-template-columns: 1fr 2fr 1fr; /* 3-column layout */
  gap: 30px;
  width: 100%;
  max-width: 1600px; /* Set a max-width for very large screens */
  padding: 20px;
  margin: 0 auto;
  box-sizing: border-box;
  align-items: start; /* Align items to the top of their grid area */
}

/* 
 * The .sideboxes class will style both the left panel and the leaderboard.
 * We remove fixed widths and let the parent grid control the size.
*/
.sideboxes {
  background-color: white;
  border-radius: 16px;
  border: 1px solid #dee2e6;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
  padding: 20px;
  width: 100%; /* Take up the full width of the grid column */
  box-sizing: border-box;
}

/* 
 * --- MEDIA QUERY FOR RESPONSIVENESS ---
 * When the screen is 1024px or less, stack the columns vertically.
*/
@media (max-width: 1024px) {
  .game-main {
    grid-template-columns: 1fr; /* Switch to a single column layout */
  }

  /* The game grid should come first on mobile for better UX */
  .connections-grid-container {
    order: 1;
  }
  .left-panel {
    order: 2;
  }
  .leaderboard {
    order: 3;
  }
}